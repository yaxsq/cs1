/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package ramanujan;
import java.util.*;
/**
 *
 * @author Shazain
 */
public class Ramanujan {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        Scanner in = new Scanner(System.in);
        /*takes an integer n and prints all integers less than or equal to n that can be expressed as the sum of two cubes in two different ways
        four nested for loops
        from 1 to input^1/3
        
        x = 1 to n
            y = 1 to n // n to 1
                if sum = input then print values 
                    loop again for x to n 
                        loop for y to n until sum <> input
        
        */
        System.out.print("Enter your number: "); 
        int n = in.nextInt();
        //System.out.println("n " + n);
        int i = 0;
        int x = 0;
        int y = 0;
        int j = (int)Math.cbrt(n);
        //System.out.println("J " + j);
        int sum = 0;
        int a = 0;
        int b = 0;
        double found = 0;
        
        for (x=0 ; x <=j; x++) {
            for (y=0 ; y <= j; y++ ) {
                if ((((sum = (int)(Math.pow(x, 3)) + (int)(Math.pow(y, 3)) ) == n)) && y != j ) {
                   System.out.println( x + "^3 + " + y + "^3 = " + n); 
                   found += 1;
                //   System.out.println("found " + found);
                   
               /*    for ( a=(x+1); a<=j; a++ ) {
                       for ( b=(y+1); b<=j; b++) {
                          if ((sum = (int)(Math.pow(a, 3)) + (int)(Math.pow(b, 3)) ) == n)  {
                              System.out.println("A " + a + " B " + b); 
                          }
                       }
                   } */
                }
            }
        }
        
      /*  for ( i=0; i<=n; i++) {
            while (((int)Math.pow(x, 3)) + ((int)(Math.pow(y, 3))) <= n) {
                x++;
                y++;
                System.out.println(x + " X");
                System.out.println(y + " Y");
               
               for (y=n; y>0 ; y--) {
                   for (x=0; x<= n; x++) {
                       
                       int j = (int)Math.pow((((Math.pow(x, 3))) + ((Math.pow(y, 3))) ), 1/3);
                     
                       System.out.println("J " + j);
                       for (i=0; i<=j; i++) {
                           System.out.println("X " + x);
                           System.out.println("y " + y);
                       }
                   
                   }
                       
                   
            }
        }
    
        
        
        do {
            i++;
            x += 1;
            y += 1; 
        } while ( ( ((int)(Math.pow(x, 3)) + ((int)Math.pow(y, 3)) ) != n));
        
        
        System.out.println( " TRASH  " + (x-1) + "^3 x");
        System.out.println((y-1) + "^3 y");
        System.out.println((a-1) + "^3 a");
        System.out.println((b-1) + "^3 b");
        System.out.println(n + "  n");        */
     // System.out.println("A total of " + found + " instances have been found. ");
      System.out.println("Ths number " + n + " has " + (int)Math.ceil(found/2) + " instances of two cubed numbers adding up to it.");
    }
    
}
